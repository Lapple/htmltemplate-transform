#!/usr/bin/env node

var path = require('path');

var fs = require('fs');

var parser = require('htmltemplate-parser');

var astStringify = require('../ast-stringify/');

var transform = require('../');

var optimizeConditions = require('../plugins/optimize-conditions');

var argv = require('yargs')
    .usage('Usage: $0 [options]')
    .options({
        'path': {
            demand: true,
            describe: 'file to optimize',
            type: 'string'
        },

        'test': {
            describe: 'display the result of the test'
        }
    })
    .argv;

var templateString = fs.readFileSync(argv.path).toString();

var AST = parser.parse(templateString, { ignoreHTMLTags: true });

transform(argv.path, null, { ignoreHTMLTags: true })
.using(
    optimizeConditions({
        '$falsy': false
    })
)
.toAST(function(err, optimizedAST) {
    if (err) {
        return console.error(err);
    }

    if (argv.test) {
        var templateFromInitialAST = astStringify(AST);
        var templateFromOptimizedAST = astStringify(optimizedAST);

        if (templateString !== templateFromInitialAST) {
            console.log('%s: initial difference', argv.path);
        }

        if (templateString !== templateFromOptimizedAST) {
            console.log('%s: optimizations possible', argv.path);
        }
        return;
    }

    console.log(astStringify(ast));
});
